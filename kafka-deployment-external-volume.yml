---
kind: Deployment
apiVersion: apps/v1
metadata:
  name: kafka-broker
  labels:
    app: kafka
spec:
  replicas: 1
  selector:
    matchLabels:
      app: kafka
  template:
    metadata:
      labels:
        app: kafka
    spec:
      containers:
      - name: kafka
        image: wurstmeister/kafka
        ports:
        - name: port9092
          containerPort: 9092
        - name: port30092
          containerPort: 30092
        env:
        - name: ALLOW_PLAINTEXT_LISTENER
          value: "yes"
        - name: KAFKA_DELETE_TOPIC_ENABLE
          value: "true"
        - name: KAFKA_LOG_RETENTION_HOURS
          value: "96"
        - name: KAFKA_LISTENER_SECURITY_PROTOCOL_MAP
          value: "INTERNAL_PLAINTEXT:PLAINTEXT,EXTERNAL_PLAINTEXT:PLAINTEXT"
        - name: KAFKA_LISTENERS
          value: "INTERNAL_PLAINTEXT://0.0.0.0:30092,EXTERNAL_PLAINTEXT://0.0.0.0:9092"
        - name: KAFKA_ADVERTISED_LISTENERS
          value: "INTERNAL_PLAINTEXT://kafka-np:30092,EXTERNAL_PLAINTEXT://localhost:9092"
        - name: KAFKA_INTER_BROKER_LISTENER_NAME
          value: "INTERNAL_PLAINTEXT"
        - name: KAFKA_ZOOKEEPER_CONNECT
          valueFrom:
            configMapKeyRef:
              name: kafka-conf
              key: zk_url
        - name: KAFKA_BROKER_ID
          value: "0"
        - name: KAFKA_CREATE_TOPICS
          valueFrom:
            configMapKeyRef:
              name: kafka-conf
              key: kafka_topic
        - name: KAFKA_PORT
          value: "9092"
        resources: {}
        volumeMounts:
          - mountPath: /usr/share/kafka
            name: kafka-data
      restartPolicy: Always
      volumes:
        - name: kafka-data
          persistentVolumeClaim:
            claimName: kafka-data
